services:

  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "${HTTP_PORT}:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./:/app
    networks:
      - my_network

  php:
    container_name: php
    build:
      context: ./
    environment:
      PHP_IDE_CONFIG: "serverName=checkers"
    volumes:
      - ./xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - ./:/app
    extra_hosts:
      host.docker.internal: host-gateway
    networks:
      - my_network

  db:
    container_name: db
    image: &db-image mysql:8.0.33
    platform: linux/x86_64
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - my_network

  db_test:
    container_name: db_test
    image: *db-image
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}_test
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data_test:/var/lib/mysql
    networks:
      - my_network

  mercure:
    container_name: mercure
    image: dunglas/mercure
    restart: unless-stopped
    environment:
      SERVER_NAME: ':80'
      MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_JWT_SECRET}
      MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_JWT_SECRET}
      MERCURE_EXTRA_DIRECTIVES: |
        cors_origins http://localhost:8000
    command: /usr/bin/caddy run --config /etc/caddy/dev.Caddyfile
    healthcheck:
      test: [ "CMD", "curl", "-f", "https://localhost/healthz" ]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - mercure_data:/data
      - mercure_config:/config
    ports:
      - "8001:80"
    networks:
      - my_network

  redis:
    container_name: redis
    image: redis:latest
    restart: always
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - my_network

volumes:
  mysql_data:
  mysql_data_test:
  mercure_data:
  mercure_config:
  redis_data:


networks:
  my_network: