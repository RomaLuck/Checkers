version: '3'

services:

  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "${HTTP_PORT}:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./app:/app
    networks:
      - my_network

  php:
    container_name: php
    build:
      context: ./
    environment:
      PHP_IDE_CONFIG: "serverName=${SERVER_NAME}"
    volumes:
      - ./app:/app
    networks:
      - my_network

  db:
    container_name: db
    image: &db-image mysql:8.0.33
    platform: linux/x86_64
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - my_network

  db_test:
    container_name: db_test
    image: *db-image
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: db_name_test
      MYSQL_USER: db_user
      MYSQL_PASSWORD: db_password
    volumes:
      - mysql_data_test:/var/lib/mysql
    networks:
      - my_network

  mercure:
    image: dunglas/mercure
    restart: unless-stopped
    environment:
      # Uncomment the following line to disable HTTPS,
      SERVER_NAME: ':80'
      MERCURE_PUBLISHER_JWT_KEY: '!ChangeThisMercureHubJWTSecretKey!'
      MERCURE_SUBSCRIBER_JWT_KEY: '!ChangeThisMercureHubJWTSecretKey!'
      # Set the URL of your Symfony project (without trailing slash!) as value of the cors_origins directive
      MERCURE_EXTRA_DIRECTIVES: |
        cors_origins http://127.0.0.1:8000
    # Comment the following line to disable the development mode
    command: /usr/bin/caddy run --config /etc/caddy/Caddyfile.dev
    healthcheck:
      test: [ "CMD", "curl", "-f", "https://localhost/healthz" ]
      timeout: 5s
      retries: 5
    volumes:
      - mercure_data:/data
      - mercure_config:/config
    ports:
      - "9000:80"

volumes:
  mysql_data:
  mysql_data_test:
  mercure_data:
  mercure_config:

networks:
  my_network: